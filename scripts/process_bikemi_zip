#!/usr/bin/env bash

# process_bikemi_zip path/to/zipfile

# TO DO(?)
# use getopts (with the -s at the end!) to specify EXTRACTION_DIR

# colored output "trick"
source "$ZDOTDIR/colors.zsh"

# see if the server is running (custom script, just a fancy conditional)
pg_server_status # &>/dev/null # we are not interested if the server is running

for ZIP_PATH in $@; do
    
    # name and create the extraction directory, starting from the filename
        # FYI:
        # ${VARIABLE/<pattern_to_replace>/<pattern_to_substitute>} 
        # ${VARIABLE/<pattern_to_delete>}
    ZIP="$(basename "$ZIP_PATH")"
    EXTRACTION_DIR="${ZIP_PATH/.zip}"

    echo -e "${BOLD}${BLUE}=> ${WHITE}Create the extraction directory ${BLUE}${EXTRACTION_DIR}${RESET}"
    mkdir -p "$EXTRACTION_DIR" && pushd "$EXTRACTION_DIR"

    # unzip the file
    echo -e "\n${BOLD}${BLUE}=> ${WHITE}Unzip ${BLUE}${ZIP}${RESET}"
    unzip "../${ZIP}"
    echo ""

    for FILE in * ; do
        echo "${BOLD}${CYAN}==> ${WHITE}Rename ${CYAN}${FILE}${RESET}"
        rename -z "$FILE"
    done
    echo ""

    # if files matches .xlsx, then convert it to a temporary csv file ending in "*_temp.csv"
    for XLSX in *.xlsx ; do
        echo "${BOLD}${GREEN}==> ${WHITE}Convert ${GREEN}${XLSX} ${WHITE}to ${GREEN}${XLSX/.xlsx/_temp.csv}${RESET}"
        in2csv "$XLSX" > "${XLSX/.xlsx/_temp.csv}" && rm "$XLSX"
    done
    echo ""

    # for each csv:
    # 1. cleans the headers 
    # 2. selects only the columns that will be needed
    # then removes the temp csv and keeps only the final one
    for TEMP_CSV in *_temp.csv ; do     
        echo "${BOLD}${GREEN}==> ${WHITE}Clean ${GREEN}${TEMP_CSV} ${WHITE}headers${RESET}"
        clean_headers "${TEMP_CSV}"

        echo "${BOLD}${GREEN}==> ${WHITE}Select the columns we need from ${GREEN}${TEMP_CSV}${RESET}"
        xsv select "1-3,5-7,10-12,15" "${TEMP_CSV}" > "${TEMP_CSV/_temp}" && rm "${TEMP_CSV}"
    done

    # puts the csv into the bikemi PostgreSQL database
    # NOTE: arguments of csv_into_postgres are path/to/directories!
    csv_into_postgres ${EXTRACTION_DIR}

    popd

done